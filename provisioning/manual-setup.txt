#################
# GENERAL SETUP #
#################
$ sudo adduser deploy
$ sudo adduser deploy sudo
$ su deploy
$ sudo apt-get update
$ sudo apt-get upgrade -y

#########
# UTILS #
#########
$ sudo apt-get install -y git git-core curl zlib1g-dev build-essential libssl-dev libreadline-dev libyaml-dev libsqlite3-dev sqlite3 libxml2-dev libxslt1-dev libcurl4-openssl-dev python-software-properties libffi-dev

###################
# NODE, NPM, GULP #
###################
$ curl -sL https://deb.nodesource.com/setup_0.12 | sudo bash -
$ sudo apt-get install -y nodejs
$ sudo npm install -g gulp

############
# POSTGRES #
############
$ sudo apt-get install -y postgresql postgresql-contrib postgresql-common libpq-dev
$ sudo su postgres
$ cd ~
$ createuser databaseuser
$ psql
$ > \password databaseuser
$ > \q
$ psql -d template1
$ > ALTER ROLE databaseuser WITH SUPERUSER;
$ > \q
$ exit

##########################
# RUBY, GEM, RAKE, RAILS #
##########################
$ cd
$ git clone git://github.com/sstephenson/rbenv.git .rbenv
$ echo 'export PATH="$HOME/.rbenv/bin:$PATH"' >> ~/.bashrc
$ echo 'eval "$(rbenv init -)"' >> ~/.bashrc
$ exec $SHELL
$ git clone git://github.com/sstephenson/ruby-build.git ~/.rbenv/plugins/ruby-build
echo 'export PATH="$HOME/.rbenv/plugins/ruby-build/bin:$PATH"' >> ~/.bashrc
exec $SHELL
$ git clone https://github.com/sstephenson/rbenv-gem-rehash.git ~/.rbenv/plugins/rbenv-gem-rehash
$ rbenv install 2.2.0 --verbose
$ rbenv global 2.2.0
$ ruby -v
$ echo 'gem: --no-document' >> ~/.gemrc
$ gem install rake rails bundler puma

#################
# RAILS PROJECT #
#################
$ cd ~
$ git clone https://github.com/saxifrage/cityasacampus.git
$ cd cityasacampus
$ nano .ruby-version #change to 2.2.0
$ bundle install
$ cd config
$ rake secret #for APP_SECRET
$ rake secret #for APP_TOKEN
$ sudo nano ~/.bashrc
export APP_SECRET="<paste>"
export APP_TOKEN="<paste>"
export APP_DATABASE_USER="<paste>"
export APP_DATABASE_PASS="<paste>"

$ source ~/.bashrc
$ nano database.yml
production:
  adapter: postgresql
  encoding: utf8
  database: learn_prod
  pool: 5
  host: localhost
  port: 5432
  username: <%= ENV["APP_DATABASE_USER"] %>
  password: <%= ENV["APP_DATABASE_PASS"] %>

$ nano secrets.yml
production:
  secret_key_base: <%= ENV["APP_SECRET"] %>
  secret_token: <%= ENV["APP_TOKEN"] %>
$ RAILS_ENV=production rake db:create
$ RAILS_ENV=production rake db:migrate
$ RAILS_ENV=production rake db:seed
$ cd ../client
$ sudo npm i #if fails, sudo npm rebuild node-sass
$ nano app/shared/conf/ConfService.js #change prod to
angular.module('caac.shared.conf.service', [])
  .factory('ConfService', ['$window',
    function($window) {
      var c = [];

      var get = function(k) {
        var appEnv = $window.document.location.hostname;

        //shared
        c.APP = 'City as a Campus';
        c.CITY = 'Pittsburgh';
        c.GOOGLE_MAPS_ENDPOINT = 'https://maps.googleapis.com/maps/api/';

        //env specific
        if (['localhost', '127.0.0.1'].indexOf(appEnv) > -1) { //this means dev env
          c.ENV = '(DEV) ';
          c.API = 'http://localhost:3000';

          return c[k];
        } else { //this means prod
          c.ENV = '';
          c.API = 'http://{{{ip addr or dns here}}}';

          return c[k];
        }
      };

      return {
        get: get
      };
    }
  ]);
$ gulp production
$ cd ..
$ bundle
$ RAILS_ENV=production rake assets:precompile

################
# NGINX & Puma #
################
$ cd ~/cityasacampus
$ nano config/puma.rb
workers 1
daemonize true
threads 1, 6
app_dir = File.expand_path("../..", __FILE__)
shared_dir = "#{app_dir}/shared"
rails_env = "production"
environment rails_env
bind "unix://#{shared_dir}/sockets/puma.sock"
stdout_redirect "#{shared_dir}/log/puma.stdout.log", "#{shared_dir}/log/puma.stderr.log", true
pidfile "#{shared_dir}/pids/puma.pid"
state_path "#{shared_dir}/pids/puma.state"
activate_control_app
on_worker_boot do
  require "active_record"
  ActiveRecord::Base.connection.disconnect! rescue ActiveRecord::ConnectionNotEstablished
  ActiveRecord::Base.establish_connection(YAML.load_file("#{app_dir}/config/database.yml")[rails_env])
end
$ mkdir -p shared/pids shared/sockets shared/log
$ sudo apt-get install -y nginx
$ sudo nano /etc/nginx/sites-available/default
upstream app {
    server unix:/home/deploy/cityasacampus/shared/sockets/puma.sock fail_timeout=0;
}

server {
    listen 80;
    server_name localhost;

    root /home/deploy/cityasacampus/public;

    try_files $uri/index.html $uri @app;

    location @app {
        proxy_pass http://app;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;
    }

    error_page 500 502 503 504 /500.html;
    client_max_body_size 4G;
    keepalive_timeout 10;
}

$ sudo update-rc.d nginx enable
$ sudo service nginx restart
$ cd ~/cityasacampus
$ bundler exec puma -C config/puma.rb

########
# Notes #
########
- when logging on deploy user, run `exec $SHELL`
- use `bundler exec` ... for tasks
- I had to `bundle clean --force` in order to get things to work. idk why.
cd ~/cityasacampus && bundler exec pumactl -P shared/pids/puma.pid stop #to stop daemon
- I didn't add puma as an init.d script... so when rebooting, we'll have to start it manually for now
