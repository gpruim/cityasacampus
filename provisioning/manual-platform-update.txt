$ ssh root@159.203.116.42
$ sudo su deploy
$ cd ~
$ cd cityasacampus
$ exec $SHELL
$ bundler exec pumactl -P shared/pids/puma.pid stop
$ cd ..
$ sudo rm -rf cityasacampus
$ git clone https://github.com/saxifrage/cityasacampus.git
$ nano .ruby-version #change to 2.2.0
$ bundle install
$ cd config
$ nano database.yml
production:
  adapter: postgresql
  encoding: utf8
  database: learn_prod
  pool: 5
  host: localhost
  port: 5432
  username: <%= ENV["APP_DATABASE_USER"] %>
  password: <%= ENV["APP_DATABASE_PASS"] %>
$ nano secrets.yml
production:
  secret_key_base: <%= ENV["APP_SECRET"] %>
  secret_token: <%= ENV["APP_TOKEN"] %>

#these commands will depend on the case... probably just want migrate. but for the
#mvp, I can see us not really caring because we don't have real user accounts and
#we're just demoing and testing things out!
$ RAILS_ENV=production rake db:drop
$ RAILS_ENV=production rake db:create
$ RAILS_ENV=production rake db:migrate
$ RAILS_ENV=production rake db:seed

$ cd ../client
$ sudo npm i #if fails, sudo npm rebuild node-sass
$ nano app/shared/conf/ConfService.js
angular.module('caac.shared.conf.service', [])
  .factory('ConfService', ['$window',
    function($window) {
      var c = [];

      var get = function(k) {
        var appEnv = $window.document.location.hostname;

        //shared
        c.APP = 'City as a Campus';
        c.CITY = 'Pittsburgh';
        c.GOOGLE_MAPS_ENDPOINT = 'https://maps.googleapis.com/maps/api/';

        //env specific
        if (['localhost', '127.0.0.1'].indexOf(appEnv) > -1) { //this means dev env
          c.ENV = '(DEV) ';
          c.API = 'http://localhost:3000';

          return c[k];
        } else { //this means prod
          c.ENV = '';
          c.API = 'http://learnpgh.org';

          return c[k];
        }
      };

      return {
        get: get
      };
    }
  ]);
$ gulp production
$ cd ..
$ bundle
$ RAILS_ENV=production rake assets:precompile
$ cd ~/cityasacampus
$ nano config/puma.rb
workers 1
daemonize true
threads 1, 6
app_dir = File.expand_path("../..", __FILE__)
shared_dir = "#{app_dir}/shared"
rails_env = "production"
environment rails_env
bind "unix://#{shared_dir}/sockets/puma.sock"
stdout_redirect "#{shared_dir}/log/puma.stdout.log", "#{shared_dir}/log/puma.stderr.log", true
pidfile "#{shared_dir}/pids/puma.pid"
state_path "#{shared_dir}/pids/puma.state"
activate_control_app
on_worker_boot do
  require "active_record"
  ActiveRecord::Base.connection.disconnect! rescue ActiveRecord::ConnectionNotEstablished
  ActiveRecord::Base.establish_connection(YAML.load_file("#{app_dir}/config/database.yml")[rails_env])
end
$ mkdir -p shared/pids shared/sockets shared/log
$ sudo service nginx restart
