.pathways {
  clear: both;
  margin-left: 10%;

  .pane {
    float: left;
    margin-right: 20px;
    &:last-child {
        margin-right: 0;
    }

    &.nav { width: 15%; }
    &.dnd { width: 25%; }

    ul {
      min-height: 42px;
      padding-left: 0px;
      li {
        display: block;
        cursor: pointer;

        &.selected {
          background-color: #dff0d8;
          color: #3c763d;
        }
      }
    }

    &.nav {
      li {
        margin-left: -5px;
        padding: 5px;
        font-size: smaller;

        .delete {
          display: none;
          float: right;
          height: 16px;
          width: 16px;
          text-align: center;
          &:hover {
            background: red;
          }
        }
        &:hover .delete {
          display: block;
        }
      }
    }

    &.dnd {

      li {
        background-color: #fff;
        border: 1px solid #ddd;
        border-top-right-radius: 4px;
        border-top-left-radius: 4px;
        padding: 10px 15px;
        margin-bottom: -1px;
      }

      /**
       * For the correct positioning of the placeholder element, the dnd-list and
       * it's children must have position: relative
       */
      ul[dnd-list],
      ul[dnd-list] > li {
        position: relative;
      }

      /**
       * The dndDraggingSource class will be applied to
       * the source element of a drag operation. It makes
       * sense to hide it to give the user the feeling
       * that he's actually moving it.
       */
      ul[dnd-list] .dndDraggingSource {
        display: none;
      }

      /**
       * An element with .dndPlaceholder class will be
       * added to the dnd-list while the user is dragging
       * over it.
       */
      ul[dnd-list] .dndPlaceholder {
        display: block;
        background-color: #ddd;
        min-height: 42px;
      }

      /**
       * The dnd-lists's child elements currently MUST have
       * position: relative. Otherwise we can not determine
       * whether the mouse pointer is in the upper or lower
       * half of the element we are dragging over. In other
       * browsers we can use event.offsetY for this.
       */
      ul[dnd-list] li {
        cursor: move;
      }
    }
  }
}
